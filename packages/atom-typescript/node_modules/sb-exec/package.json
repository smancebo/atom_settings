{
  "_args": [
    [
      {
        "raw": "sb-exec@https://registry.npmjs.org/sb-exec/-/sb-exec-3.1.0.tgz",
        "scope": null,
        "escapedName": "sb-exec",
        "name": "sb-exec",
        "rawSpec": "https://registry.npmjs.org/sb-exec/-/sb-exec-3.1.0.tgz",
        "spec": "https://registry.npmjs.org/sb-exec/-/sb-exec-3.1.0.tgz",
        "type": "remote"
      },
      "/private/var/folders/tb/t80h6lm53jn_kxnb2srfvr4r0000gn/T/apm-install-dir-117710-40923-1dmceqo.wy0tn5qaor/node_modules/atom-typescript"
    ]
  ],
  "_from": "sb-exec@>=3.0.1 <4.0.0",
  "_id": "sb-exec@3.1.0",
  "_inCache": true,
  "_location": "/atom-typescript/sb-exec",
  "_phantomChildren": {},
  "_requested": {
    "raw": "sb-exec@https://registry.npmjs.org/sb-exec/-/sb-exec-3.1.0.tgz",
    "scope": null,
    "escapedName": "sb-exec",
    "name": "sb-exec",
    "rawSpec": "https://registry.npmjs.org/sb-exec/-/sb-exec-3.1.0.tgz",
    "spec": "https://registry.npmjs.org/sb-exec/-/sb-exec-3.1.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/atom-typescript",
    "/atom-typescript/atom-package-deps"
  ],
  "_resolved": "https://registry.npmjs.org/sb-exec/-/sb-exec-3.1.0.tgz",
  "_shasum": "34cc65088a116752eb720fddeff66d2c2e95ec51",
  "_shrinkwrap": null,
  "_spec": "sb-exec@https://registry.npmjs.org/sb-exec/-/sb-exec-3.1.0.tgz",
  "_where": "/private/var/folders/tb/t80h6lm53jn_kxnb2srfvr4r0000gn/T/apm-install-dir-117710-40923-1dmceqo.wy0tn5qaor/node_modules/atom-typescript",
  "author": {
    "name": "steelbrain"
  },
  "bugs": {
    "url": "https://github.com/steelbrain/exec/issues"
  },
  "dependencies": {
    "consistent-env": "^1.2.0",
    "lodash.uniq": "^4.5.0",
    "sb-npm-path": "^2.0.0"
  },
  "description": "Process spawning APIs beautified",
  "devDependencies": {
    "babel-cli": "^6.10.1",
    "babel-preset-steelbrain": "^4.0.1",
    "eslint-config-steelbrain": "^1.0.4",
    "flow-bin": "^0.32.0",
    "jasmine-fix": "^1.0.1"
  },
  "engines": {
    "node": ">=6.0.0"
  },
  "homepage": "https://github.com/steelbrain/exec#readme",
  "keywords": [
    "child_process",
    "process",
    "exec"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "name": "sb-exec",
  "optionalDependencies": {},
  "readme": "# Exec\n\nNode's Process spawning APIs beautified\n\n## Installation\n\n```sh\nnpm install --save sb-exec\n```\n\n## API\n\n```js\ntype $OptionsAccepted = {\n  timeout?: number | Infinity,\n  stream?: 'stdout' | 'stderr'  | 'both',\n  env: Object,\n  stdin?: ?string,\n  local?: {\n    directory: string,\n    prepend?: boolean\n  },\n  throwOnStdErr?: boolean = true,\n  allowEmptyStderr?: boolean = false,\n  ignoreExitCode?: boolean\n} // Also supports all options of child_process::spawn\n\ntype PromisedProcess = {\n  then(callback: Function): Promise\n  catch(callback: Function): Promise\n  kill(signal: number)\n}\n\nexport function exec(filePath: string, parameters: array, options: $OptionsAccepted): PromisedProcess\nexport function execNode(filePath: string, parameters: array, options: $OptionsAccepted): PromisedProcess\n```\n\n## Explanation\n\n### `options.local`\n\n`options.local` adds node executables in `node_modules` relative to\n`options.local.directory` to `PATH` like in npm scripts.\n\n`options.local.prepend` prioritizes local executables over ones already in `PATH`.\n\n## License\n\nThis project is licensed under the terms of MIT License, see the LICENSE file\nfor more info\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/steelbrain/exec.git"
  },
  "scripts": {
    "clean": "rm -rf lib",
    "compile": "npm run clean && babel src --out-dir lib",
    "lint": "(flow check) && (eslint .)",
    "test": "apm test",
    "watch": "npm run clean && babel src --out-dir lib --watch"
  },
  "version": "3.1.0"
}
